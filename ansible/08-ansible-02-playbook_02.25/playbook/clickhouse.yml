---
- name: Install Clickhouse
  hosts: clickhouse
  environment: "{{ proxy_settings }}"
  handlers:

    - name: Start ClickHouse
      ansible.builtin.service:
        name: clickhouse-server
        state: started
        enabled: true
      become: true

    - name: Restart ClickHouse
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
      become: true

  tasks:
    - name: Proxy
      ansible.builtin.debug:
        msg: "{{ proxy_settings }}"  
    # - name: Run a command with a specific environment variable if defined
    #   ansible.builtin.shell: echo "My secret is $MY_SECRET"
    #   environment:
    #     MY_SECRET: "{{ proxy_settings }}"
    # - name: set an optional environment with proxy vars
    #   set_fact:
    #       proxy_env:
    #         HTTP_PROXY: "{{ http_proxy }}"
    #         HTTPS_PROXY: "{{ https_proxy }}"
    #   when: (proxy_host is defined)

    - name: Import a key from a url
      ansible.builtin.rpm_key:
        state: present
        key: https://packages.clickhouse.com/rpm/stable/repodata/repomd.xml.key
      become: true

    - name: Add ClickHouse repository
      ansible.builtin.get_url:
        url: "https://packages.clickhouse.com/rpm/clickhouse.repo"
        dest: "/etc/yum.repos.d/clickhouse_repos.repo"
        mode: 644
      become: true

    - name: Install ClickHouse packages
      ansible.builtin.dnf:
        name: "{{ item }} = {{ clickhouse_version }}"
        state: present
        update_cache: true
        # cache_valid_time: 84600
      with_items:
        - "{{ clickhouse_packages }}"
      notify:
        - Start ClickHouse
        - Restart ClickHouse
      become: true

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Wait for clickhouse-server to be ready
      ansible.builtin.wait_for:
        host: localhost
        port: 9000
        delay: 10
        timeout: 300
      tags:
        - clickhouse
        - wait

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      when:
        - ansible_virtualization_type != "docker"
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0
      tags:
        - clickhouse
        - db
